{"ast":null,"code":"import axios from 'axios';\nimport { SIGN_UP, LOGIN, PROFILE } from './types';\nimport { useRouter } from 'next/router';\nimport { responsiveFontSizes } from '@material-ui/core'; // SIGNUP USER\n\nexport const signup = data => dispatch => {\n  data['files'] = [];\n  var form_data = new FormData();\n\n  for (var key in data) {\n    form_data.append(key, data[key]);\n  }\n\n  const config = {\n    headers: {\n      'content-type': 'multipart/form-data'\n    }\n  };\n  axios.post('/api/startup/signup/', form_data, config).then(res => {\n    dispatch({\n      type: SIGN_UP,\n      payload: res.data\n    });\n  });\n}; // LOGIN USER\n\nexport const login = data => dispatch => {\n  var form_data = new FormData();\n\n  for (var key in data) {\n    form_data.append(key, data[key]);\n  }\n\n  axios.post('/api/startup/login', form_data).then(res => {\n    dispatch({\n      type: LOGIN,\n      payload: res.data\n    });\n  });\n}; // LOGIN INVESTOR\n\nexport const investorLogin = data => dispatch => {\n  var form_data = new FormData();\n\n  for (var key in data) {\n    form_data.append(key, data[key]);\n  }\n\n  axios.post('/api/investor/login', form_data).then(res => {\n    dispatch({\n      type: LOGIN,\n      payload: res.data\n    });\n  });\n}; // GET USER PROFILE\n\nexport const getProfile = () => dispatch => {\n  const token = localStorage.getItem('token');\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Brearer ${token}`\n    }\n  };\n\n  try {\n    axios.get('/api/startup/profile', config).then(res => {\n      dispatch({\n        type: PROFILE,\n        payload: res.data\n      });\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/home/whiteshadow/projects/benchmark-advisors/actions/auth.js"],"names":["axios","SIGN_UP","LOGIN","PROFILE","useRouter","responsiveFontSizes","signup","data","dispatch","form_data","FormData","key","append","config","headers","post","then","res","type","payload","login","investorLogin","getProfile","token","localStorage","getItem","Authorization","get","error","console","log"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { SIGN_UP, LOGIN, PROFILE } from './types';\nimport { useRouter } from 'next/router';\nimport { responsiveFontSizes } from '@material-ui/core';\n\n// SIGNUP USER\nexport const signup = (data) => (dispatch) => {\n    data['files'] = [];\n    var form_data = new FormData();\n    for (var key in data) {\n        form_data.append(key, data[key]);\n    }\n    const config = {\n        headers: {\n            'content-type': 'multipart/form-data',\n        },\n    };\n    axios.post('/api/startup/signup/', form_data, config).then((res) => {\n        dispatch({\n            type: SIGN_UP,\n            payload: res.data,\n        });\n    });\n};\n\n// LOGIN USER\nexport const login = (data) => (dispatch) => {\n    var form_data = new FormData();\n    for (var key in data) {\n        form_data.append(key, data[key]);\n    }\n    axios.post('/api/startup/login', form_data).then((res) => {\n        dispatch({\n            type: LOGIN,\n            payload: res.data,\n        });\n    });\n};\n\n// LOGIN INVESTOR\nexport const investorLogin = (data) => (dispatch) => {\n    var form_data = new FormData();\n    for (var key in data) {\n        form_data.append(key, data[key]);\n    }\n    axios.post('/api/investor/login', form_data).then((res) => {\n        dispatch({\n            type: LOGIN,\n            payload: res.data,\n        });\n    });\n};\n\n// GET USER PROFILE\nexport const getProfile = () => (dispatch) => {\n    const token = localStorage.getItem('token');\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Brearer ${token}`,\n        },\n    };\n    try {\n        axios.get('/api/startup/profile', config).then((res) => {\n            dispatch({\n                type: PROFILE,\n                payload: res.data,\n            });\n        });\n    } catch (error) {\n        console.log(error);\n    }\n};\n"]},"metadata":{},"sourceType":"module"}