{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { GET_COMPANY_CATEGORIES, GET_DOCUMTE_CATEGORIES, GET_CATEGORY, GET_SUB_SERVICES, GET_STATES, GET_DISTRICTS, GET_MUNICIPALITIES } from '../actions/types';\nconst initialState = {\n  companyCategory: null,\n  documentCategory: null,\n  category: null,\n  subServices: null,\n  states: null,\n  districts: null,\n  municipalities: null\n};\nexport default function common(state = initialState, action) {\n  var _action$payload, _action$payload2, _action$payload3, _action$payload4, _action$payload5, _action$payload6, _action$payload7;\n\n  switch (action.type) {\n    case GET_COMPANY_CATEGORIES:\n      return _objectSpread(_objectSpread(_objectSpread({}, state), action.payload), {}, {\n        companyCategory: (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.data\n      });\n\n    case GET_DOCUMTE_CATEGORIES:\n      return _objectSpread(_objectSpread(_objectSpread({}, state), action.payload), {}, {\n        documentCategory: (_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.data\n      });\n\n    case GET_CATEGORY:\n      return _objectSpread(_objectSpread(_objectSpread({}, state), action.payload), {}, {\n        category: (_action$payload3 = action.payload) === null || _action$payload3 === void 0 ? void 0 : _action$payload3.data\n      });\n\n    case GET_SUB_SERVICES:\n      return _objectSpread(_objectSpread(_objectSpread({}, state), action.payload), {}, {\n        subServices: (_action$payload4 = action.payload) === null || _action$payload4 === void 0 ? void 0 : _action$payload4.data\n      });\n\n    case GET_STATES:\n      return _objectSpread(_objectSpread(_objectSpread({}, state), action.payload), {}, {\n        states: (_action$payload5 = action.payload) === null || _action$payload5 === void 0 ? void 0 : _action$payload5.data\n      });\n\n    case GET_DISTRICTS:\n      return _objectSpread(_objectSpread(_objectSpread({}, state), action.payload), {}, {\n        districts: (_action$payload6 = action.payload) === null || _action$payload6 === void 0 ? void 0 : _action$payload6.data\n      });\n\n    case GET_MUNICIPALITIES:\n      return _objectSpread(_objectSpread(_objectSpread({}, state), action.payload), {}, {\n        municipalities: (_action$payload7 = action.payload) === null || _action$payload7 === void 0 ? void 0 : _action$payload7.data\n      });\n\n    default:\n      return state;\n  }\n}","map":null,"metadata":{},"sourceType":"module"}