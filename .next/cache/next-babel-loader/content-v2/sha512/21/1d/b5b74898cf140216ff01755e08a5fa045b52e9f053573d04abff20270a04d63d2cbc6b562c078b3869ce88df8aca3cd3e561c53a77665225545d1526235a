{"ast":null,"code":"import axios from 'axios';\nimport { INVESTOR_SIGNUP, INVESTOR_SIGNUP_FAIL, INVESTOR_SIGNUP_SUCCESS, LOGIN, LOGIN_FAIL, LOGIN_SUCCESS, PROFILE_UPDATE, PROFILE_UPDATE_SUCCESS, PROFILE_UPDATE_FAIL } from './types'; // SIGNUP USER\n\nexport const signUpInvestor = data => dispatch => {\n  dispatch({\n    type: INVESTOR_SIGNUP\n  });\n  var form_data = new FormData();\n\n  for (var key in data) {\n    form_data.append(key, data[key]);\n  }\n\n  axios.post('/api/investor/signup/', form_data).then(res => {\n    dispatch({\n      type: INVESTOR_SIGNUP_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: INVESTOR_SIGNUP_FAIL,\n      payload: err.response.data\n    });\n  });\n}; // LOGIN INVESTOR\n\nexport const investorLogin = data => dispatch => {\n  dispatch({\n    type: LOGIN\n  });\n  var form_data = new FormData();\n\n  for (var key in data) {\n    form_data.append(key, data[key]);\n  }\n\n  axios.post('/api/investor/login', form_data).then(res => {\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: err.response.data\n    });\n  });\n}; // Update Startup PROFILE\n\nexport const updateInvestorProfile = data => dispatch => {\n  dispatch({\n    type: PROFILE_UPDATE\n  });\n  const token = localStorage.getItem('token');\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Brearer ${token}`\n    }\n  };\n  axios.post('/api/investor/update-profile', data, config).then(res => {\n    dispatch({\n      type: PROFILE_UPDATE_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: PROFILE_UPDATE_FAIL,\n      payload: err.response.data\n    });\n  });\n};","map":{"version":3,"sources":["/home/whiteshadow/projects/benchmark-advisors/actions/investor.js"],"names":["axios","INVESTOR_SIGNUP","INVESTOR_SIGNUP_FAIL","INVESTOR_SIGNUP_SUCCESS","LOGIN","LOGIN_FAIL","LOGIN_SUCCESS","PROFILE_UPDATE","PROFILE_UPDATE_SUCCESS","PROFILE_UPDATE_FAIL","signUpInvestor","data","dispatch","type","form_data","FormData","key","append","post","then","res","payload","catch","err","response","investorLogin","updateInvestorProfile","token","localStorage","getItem","config","headers","Authorization"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {\n    INVESTOR_SIGNUP,\n    INVESTOR_SIGNUP_FAIL,\n    INVESTOR_SIGNUP_SUCCESS,\n    LOGIN,\n    LOGIN_FAIL,\n    LOGIN_SUCCESS,\n    PROFILE_UPDATE,\n    PROFILE_UPDATE_SUCCESS,\n    PROFILE_UPDATE_FAIL,\n} from './types';\n\n// SIGNUP USER\nexport const signUpInvestor = (data) => (dispatch) => {\n    dispatch({\n        type: INVESTOR_SIGNUP,\n    });\n\n    var form_data = new FormData();\n    for (var key in data) {\n        form_data.append(key, data[key]);\n    }\n\n    axios\n        .post('/api/investor/signup/', form_data)\n        .then((res) => {\n            dispatch({\n                type: INVESTOR_SIGNUP_SUCCESS,\n                payload: res.data,\n            });\n        })\n        .catch((err) => {\n            dispatch({\n                type: INVESTOR_SIGNUP_FAIL,\n                payload: err.response.data,\n            });\n        });\n};\n\n// LOGIN INVESTOR\nexport const investorLogin = (data) => (dispatch) => {\n    dispatch({ type: LOGIN });\n    var form_data = new FormData();\n    for (var key in data) {\n        form_data.append(key, data[key]);\n    }\n    axios\n        .post('/api/investor/login', form_data)\n        .then((res) => {\n            dispatch({\n                type: LOGIN_SUCCESS,\n                payload: res.data,\n            });\n        })\n        .catch((err) => {\n            dispatch({\n                type: LOGIN_FAIL,\n                payload: err.response.data,\n            });\n        });\n};\n\n// Update Startup PROFILE\nexport const updateInvestorProfile = (data) => (dispatch) => {\n    dispatch({ type: PROFILE_UPDATE });\n    const token = localStorage.getItem('token');\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Brearer ${token}`,\n        },\n    };\n\n    axios\n        .post('/api/investor/update-profile', data, config)\n        .then((res) => {\n            dispatch({\n                type: PROFILE_UPDATE_SUCCESS,\n                payload: res.data,\n            });\n        })\n        .catch((err) => {\n            dispatch({\n                type: PROFILE_UPDATE_FAIL,\n                payload: err.response.data,\n            });\n        });\n};\n"]},"metadata":{},"sourceType":"module"}