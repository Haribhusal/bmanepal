{"ast":null,"code":"import axios from 'axios';\nimport { CLEAR_MESSAGES, SIGN_UP, SIGN_UP_FAIL, SIGN_UP_SUCCESS, LOGIN, LOGIN_FAIL, LOGIN_SUCCESS, PROFILE, PROFILE_UPDATE, PROFILE_UPDATE_FAIL, PROFILE_UPDATE_SUCCESS, PASSWORD_UPDATE, PASSWORD_UPDATE_FAIL, PASSWORD_UPDATE_SUCCESS } from './types'; // SIGNUP USER\n\nexport const signup = data => dispatch => {\n  dispatch({\n    type: SIGN_UP\n  });\n  data['files'] = [];\n  var form_data = new FormData();\n\n  for (var key in data) {\n    form_data.append(key, data[key]);\n  }\n\n  const config = {\n    headers: {\n      'content-type': 'multipart/form-data'\n    }\n  };\n  axios.post('/api/startup/signup/', form_data, config).then(res => {\n    dispatch({\n      type: SIGN_UP_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: SIGN_UP_FAIL,\n      payload: err.response.data\n    });\n  });\n}; // LOGIN USER\n\nexport const login = data => dispatch => {\n  dispatch({\n    type: LOGIN\n  });\n  var form_data = new FormData();\n\n  for (var key in data) {\n    form_data.append(key, data[key]);\n  }\n\n  axios.post('/api/startup/login', form_data).then(res => {\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: err.response.data\n    });\n  });\n}; // GET USER PROFILE\n\nexport const getProfile = () => dispatch => {\n  const token = localStorage.getItem('token');\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Brearer ${token}`\n    }\n  };\n\n  try {\n    axios.get('/api/startup/profile', config).then(res => {\n      dispatch({\n        type: PROFILE,\n        payload: res.data\n      });\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}; // Update Startup PROFILE\n\nexport const updateStartupProfile = data => dispatch => {\n  dispatch({\n    type: PROFILE_UPDATE\n  });\n  const token = localStorage.getItem('token');\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Brearer ${token}`\n    }\n  };\n  console.log(data, '============= data =================');\n  axios.post('/api/startup/update-profile', data, config).then(res => {\n    dispatch({\n      type: PROFILE_UPDATE_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: PROFILE_UPDATE_FAIL,\n      payload: err.response.data\n    });\n  });\n}; // Update password\n\nexport const updatePassword = data => dispatch => {// dispatch({ type: PASSWORD_UPDATE });\n  // const token = localStorage.getItem('token');\n  // const config = {\n  //     headers: {\n  //         'Content-Type': 'application/json',\n  //         Authorization: `Brearer ${token}`,\n  //     },\n  // };\n  // axios\n  //     .post('/api/startup/update-profile', data, config)\n  //     .then((res) => {\n  //         dispatch({\n  //             type: PASSWORD_UPDATE_SUCCESS,\n  //             payload: res.data,\n  //         });\n  //     })\n  //     .catch((err) => {\n  //         dispatch({\n  //             type: PASSWORD_UPDATE_FAIL,\n  //             payload: err.response.data,\n  //         });\n  //     });\n}; // Clear message on page load\n\nexport const clearMessages = () => dispatch => {\n  dispatch({\n    type: CLEAR_MESSAGES\n  });\n};","map":{"version":3,"sources":["/home/whiteshadow/projects/benchmark-advisors/actions/auth.js"],"names":["axios","CLEAR_MESSAGES","SIGN_UP","SIGN_UP_FAIL","SIGN_UP_SUCCESS","LOGIN","LOGIN_FAIL","LOGIN_SUCCESS","PROFILE","PROFILE_UPDATE","PROFILE_UPDATE_FAIL","PROFILE_UPDATE_SUCCESS","PASSWORD_UPDATE","PASSWORD_UPDATE_FAIL","PASSWORD_UPDATE_SUCCESS","signup","data","dispatch","type","form_data","FormData","key","append","config","headers","post","then","res","payload","catch","err","response","login","getProfile","token","localStorage","getItem","Authorization","get","error","console","log","updateStartupProfile","updatePassword","clearMessages"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {\n    CLEAR_MESSAGES,\n    SIGN_UP,\n    SIGN_UP_FAIL,\n    SIGN_UP_SUCCESS,\n    LOGIN,\n    LOGIN_FAIL,\n    LOGIN_SUCCESS,\n    PROFILE,\n    PROFILE_UPDATE,\n    PROFILE_UPDATE_FAIL,\n    PROFILE_UPDATE_SUCCESS,\n    PASSWORD_UPDATE,\n    PASSWORD_UPDATE_FAIL,\n    PASSWORD_UPDATE_SUCCESS,\n} from './types';\n\n// SIGNUP USER\nexport const signup = (data) => (dispatch) => {\n    dispatch({ type: SIGN_UP });\n    data['files'] = [];\n    var form_data = new FormData();\n    for (var key in data) {\n        form_data.append(key, data[key]);\n    }\n    const config = {\n        headers: {\n            'content-type': 'multipart/form-data',\n        },\n    };\n    axios\n        .post('/api/startup/signup/', form_data, config)\n        .then((res) => {\n            dispatch({\n                type: SIGN_UP_SUCCESS,\n                payload: res.data,\n            });\n        })\n        .catch((err) => {\n            dispatch({\n                type: SIGN_UP_FAIL,\n                payload: err.response.data,\n            });\n        });\n};\n\n// LOGIN USER\nexport const login = (data) => (dispatch) => {\n    dispatch({ type: LOGIN });\n    var form_data = new FormData();\n    for (var key in data) {\n        form_data.append(key, data[key]);\n    }\n    axios\n        .post('/api/startup/login', form_data)\n        .then((res) => {\n            dispatch({\n                type: LOGIN_SUCCESS,\n                payload: res.data,\n            });\n        })\n        .catch((err) => {\n            dispatch({\n                type: LOGIN_FAIL,\n                payload: err.response.data,\n            });\n        });\n};\n\n// GET USER PROFILE\nexport const getProfile = () => (dispatch) => {\n    const token = localStorage.getItem('token');\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Brearer ${token}`,\n        },\n    };\n    try {\n        axios.get('/api/startup/profile', config).then((res) => {\n            dispatch({\n                type: PROFILE,\n                payload: res.data,\n            });\n        });\n    } catch (error) {\n        console.log(error);\n    }\n};\n\n// Update Startup PROFILE\nexport const updateStartupProfile = (data) => (dispatch) => {\n    dispatch({ type: PROFILE_UPDATE });\n    const token = localStorage.getItem('token');\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Brearer ${token}`,\n        },\n    };\n\n    console.log(data, '============= data =================');\n\n    axios\n        .post('/api/startup/update-profile', data, config)\n        .then((res) => {\n            dispatch({\n                type: PROFILE_UPDATE_SUCCESS,\n                payload: res.data,\n            });\n        })\n        .catch((err) => {\n            dispatch({\n                type: PROFILE_UPDATE_FAIL,\n                payload: err.response.data,\n            });\n        });\n};\n\n// Update password\nexport const updatePassword = (data) => (dispatch) => {\n    // dispatch({ type: PASSWORD_UPDATE });\n    // const token = localStorage.getItem('token');\n    // const config = {\n    //     headers: {\n    //         'Content-Type': 'application/json',\n    //         Authorization: `Brearer ${token}`,\n    //     },\n    // };\n    // axios\n    //     .post('/api/startup/update-profile', data, config)\n    //     .then((res) => {\n    //         dispatch({\n    //             type: PASSWORD_UPDATE_SUCCESS,\n    //             payload: res.data,\n    //         });\n    //     })\n    //     .catch((err) => {\n    //         dispatch({\n    //             type: PASSWORD_UPDATE_FAIL,\n    //             payload: err.response.data,\n    //         });\n    //     });\n};\n\n// Clear message on page load\nexport const clearMessages = () => (dispatch) => {\n    dispatch({ type: CLEAR_MESSAGES });\n};\n"]},"metadata":{},"sourceType":"module"}