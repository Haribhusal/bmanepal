{"ast":null,"code":"import _defineProperty from \"/home/whiteshadow/projects/benchmark-advisors/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/whiteshadow/projects/benchmark-advisors/components/startup/UpdatePasswordForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport * as yup from 'yup';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateStartupProfile } from '../../actions/auth';\n\nvar UpdatePasswordForm = function UpdatePasswordForm() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.auth;\n  }),\n      user = _useSelector.user;\n\n  var schema = yup.object().shape({\n    old_password: yup.string().required(),\n    password: yup.string().required().min(8).matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/, 'Must contain at least one uppercase letter, number and special character'),\n    password_confirmation: yup.string().required().oneOf([yup.ref('password')], 'Passwords must match')\n  });\n\n  var _useForm = useForm({\n    resolver: yupResolver(schema)\n  }),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit;\n\n  var onSubmit = function onSubmit(data) {\n    dispatch(updateStartupProfile(data));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-sm-6 d-flex align-items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        className: \"w-100\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formwrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-12\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"\",\n                  className: \"small text-muted\",\n                  children: \"Current Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 37\n                }, _this), /*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({}, register('old_password')), {}, {\n                  className: \"form-control\",\n                  placeholder: \"Current Password\"\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 37\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-12\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"\",\n                  className: \"small text-muted\",\n                  children: \"New Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 37\n                }, _this), /*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({}, register('password')), {}, {\n                  className: \"form-control\",\n                  placeholder: \"New Password\"\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 37\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-12\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"\",\n                  className: \"small text-muted\",\n                  children: \"Confirm Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 37\n                }, _this), /*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({}, register('password_confirmation')), {}, {\n                  className: \"form-control\",\n                  placeholder: \"Confirm Password\"\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 37\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rightbarContent\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"imagewrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"images/joinbenchmark.png\",\n          className: \"img-fluid\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(UpdatePasswordForm, \"4SYoKgXTyST86N6ElofERMio31I=\", false, function () {\n  return [useDispatch, useSelector, useForm];\n});\n\n_c = UpdatePasswordForm;\nexport default UpdatePasswordForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePasswordForm\");","map":{"version":3,"sources":["/home/whiteshadow/projects/benchmark-advisors/components/startup/UpdatePasswordForm.js"],"names":["React","yup","useForm","yupResolver","useDispatch","useSelector","updateStartupProfile","UpdatePasswordForm","dispatch","state","auth","user","schema","object","shape","old_password","string","required","password","min","matches","password_confirmation","oneOf","ref","resolver","register","handleSubmit","onSubmit","data"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as yup from 'yup';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateStartupProfile } from '../../actions/auth';\n\nconst UpdatePasswordForm = () => {\n    const dispatch = useDispatch();\n    const { user } = useSelector((state) => state.auth);\n\n    const schema = yup.object().shape({\n        old_password: yup.string().required(),\n        password: yup\n            .string()\n            .required()\n            .min(8)\n            .matches(\n                /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\n                'Must contain at least one uppercase letter, number and special character'\n            ),\n        password_confirmation: yup\n            .string()\n            .required()\n            .oneOf([yup.ref('password')], 'Passwords must match'),\n    });\n\n    const { register, handleSubmit } = useForm({\n        resolver: yupResolver(schema),\n    });\n\n    const onSubmit = (data) => {\n        dispatch(updateStartupProfile(data));\n    };\n\n    return (\n        <div className='row'>\n            <div className='col-sm-6 d-flex align-items-center'>\n                <form onSubmit={handleSubmit(onSubmit)} className='w-100'>\n                    <div className='formwrapper'>\n                        <div className='row'>\n                            <div className='col-sm-12'>\n                                <div className='form-group'>\n                                    <label\n                                        htmlFor=''\n                                        className='small text-muted'\n                                    >\n                                        Current Password\n                                    </label>\n                                    <input\n                                        {...register('old_password')}\n                                        className='form-control'\n                                        placeholder='Current Password'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='row'>\n                            <div className='col-sm-12'>\n                                <div className='form-group'>\n                                    <label\n                                        htmlFor=''\n                                        className='small text-muted'\n                                    >\n                                        New Password\n                                    </label>\n                                    <input\n                                        {...register('password')}\n                                        className='form-control'\n                                        placeholder='New Password'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='row'>\n                            <div className='col-sm-12'>\n                                <div className='form-group'>\n                                    <label\n                                        htmlFor=''\n                                        className='small text-muted'\n                                    >\n                                        Confirm Password\n                                    </label>\n                                    <input\n                                        {...register('password_confirmation')}\n                                        className='form-control'\n                                        placeholder='Confirm Password'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <div className='rightbarContent'>\n                <div className='imagewrapper'>\n                    <img\n                        src='images/joinbenchmark.png'\n                        className='img-fluid'\n                        alt=''\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default UpdatePasswordForm;\n"]},"metadata":{},"sourceType":"module"}