{"ast":null,"code":"import _defineProperty from \"/home/whiteshadow/projects/benchmark-advisors/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/whiteshadow/projects/benchmark-advisors/pages/join-startup.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useForm, Controller } from 'react-hook-form';\nimport Select from 'react-select';\nimport Link from 'next/link';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { useRouter } from 'next/router';\nimport { signup } from '../actions/auth';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { getCompanyCategory, getDocumentCategory, getStates, getDistricts, getMunicipalities } from '../actions/common'; // const phoneRegExp =\n//     /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n// const schema = yup.object().shape({\n//     startup_name: yup.string().required('Startup Name is Required'),\n//     contact_number: yup\n//         .string()\n//         .matches(phoneRegExp, 'Phone number is not valid'),\n//     email: yup\n//         .string()\n//         .email('Must be Valid Email')\n//         .max(255)\n//         .required('Startup Email is Required'),\n//     pan_number: yup.number().positive().integer().required(),\n//     personal_name: yup.string().required(),\n//     personal_contact_number: yup\n//         .string()\n//         .matches(phoneRegExp, 'Phone number is not valid'),\n//     personal_email: yup\n//         .string()\n//         .email('Must be Valid Email')\n//         .max(255)\n//         .required('Personal Email is Required'),\n//     personal_address: yup.string().required(),\n//     pan_status: yup.string().required(),\n//     company_since: yup.date().required(),\n//     password: yup\n//         .string()\n//         .required()\n//         .min(8)\n//         .matches(\n//             /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\n//             'Must contain at least one uppercase letter, number and special character'\n//         ),\n//     password_confirmation: yup\n//         .string()\n//         .required()\n//         .oneOf([yup.ref('password')], 'Passwords must match'),\n// });\n\nvar JoinStartup = function JoinStartup() {\n  _s();\n\n  //     const [successMessage, setSuccessMessage] = useState('You are done!');\n  //     const [startDate, setStartDate] = useState(new Date());\n  //     const router = useRouter();\n  //     const [activeForm, setActiveForm] = useState(1);\n  //     const {\n  //         register,\n  //         setValue,\n  //         getValues,\n  //         control,\n  //         handleSubmit,\n  //         formState: { errors },\n  //     } = useForm({\n  //         resolver: yupResolver(schema),\n  //         mode: 'onBlur',\n  //     });\n  //     const handleNext = () => {\n  //         setActiveForm(2);\n  //     };\n  //     const [mystate, setMystate] = useState('');\n  //     const [mydistrict, setMydistrict] = useState('');\n  //     const dispatch = useDispatch();\n  //     const {\n  //         companyCategory,\n  //         documentCategory,\n  //         states,\n  //         districts,\n  //         municipalities,\n  //     } = useSelector((state) => state.common);\n  //     const { isLoading, message, signupsuccess } = useSelector(\n  //         (state) => state.auth\n  //     );\n  //     const categoryOptions = companyCategory?.map((d) => ({\n  //         value: d.id,\n  //         label: d.title,\n  //     }));\n  //     const documentOptions = documentCategory?.map((d) => ({\n  //         value: d.id,\n  //         label: d.title,\n  //     }));\n  //     const stateOptions = states?.map((d) => ({\n  //         value: d.id,\n  //         label: d.province_name,\n  //     }));\n  //     const districtOptions = districts\n  //         ?.filter((f) => f.state_id === mystate)\n  //         ?.map((d) => ({ value: d.id, label: d.district_name }));\n  //     const municipalityOptions = municipalities\n  //         ?.filter((f) => f.district_id === mydistrict)\n  //         ?.map((d) => ({ value: d.id, label: d.municipality_name }));\n  //     const handleOptionChange = (selectedOption) => {\n  //         let array = [];\n  //         selectedOption.map((item) => {\n  //             array.push(item.value);\n  //         });\n  //         setValue('document_category_id', array);\n  //     };\n  //     const onSubmit = (e) => {\n  //         console.log(e, 'i am submit e');\n  //         dispatch(signup(e));\n  //     };\n  //     useEffect(() => {\n  //         signupsuccess ? setActiveForm(4) : null;\n  //         message !== null ? setSuccessMessage(message) : null;\n  //         dispatch(getCompanyCategory());\n  //         dispatch(getDocumentCategory());\n  //         dispatch(getStates());\n  //         dispatch(getDistricts());\n  //         dispatch(getMunicipalities());\n  //     }, [dispatch, signupsuccess, message]);\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit;\n\n  var onSubmit = function onSubmit(data, e) {\n    return console.log(data, e);\n  };\n\n  var onError = function onError(errors, e) {\n    return console.log(errors, e);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({}, register('firstName')), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({}, register('lastName')), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(JoinStartup, \"zkd3JmxRK/AmyiWtSfciHeYO5Zk=\", false, function () {\n  return [useForm];\n});\n\n_c = JoinStartup;\nexport default JoinStartup; //  {\n//   \"startup_name\": \"Techcare\",\n//   \"company_category_id\": \"1\",\n//   \"startupSubcategory\": \"1\",\n//   \"provience\": \"1\",\n//   \"district\": \"1\",\n//   \"municipality\": \"1\",\n//   \"location\": \"test\",\n//   \"contactNumber\": \"test\",\n//   \"startupEmail\": \"bhusalhari89@gmail.com\",\n//   \"terms\": \"1\",\n//   \"personFirstName\": \"Hari\",\n//   \"personLastName\": \"Bhusal\",\n//   \"personContact\": \"9847458523\",\n//   \"personEmail\": \"bhusalhari89@gmail.com\",\n//   \"personAddress\": \"shankhamul\",\n//   \"doc1\": \"\",\n//   \"doc2\": \"\",\n//   \"doc3\": \"\"\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"JoinStartup\");","map":{"version":3,"sources":["/home/whiteshadow/projects/benchmark-advisors/pages/join-startup.js"],"names":["React","useEffect","useState","useSelector","useDispatch","useForm","Controller","Select","Link","yupResolver","yup","useRouter","signup","DatePicker","getCompanyCategory","getDocumentCategory","getStates","getDistricts","getMunicipalities","JoinStartup","register","handleSubmit","onSubmit","data","e","console","log","onError","errors"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,iBAApC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;AAEA,SACIC,kBADJ,EAEIC,mBAFJ,EAGIC,SAHJ,EAIIC,YAJJ,EAKIC,iBALJ,QAMO,mBANP,C,CAOA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA;;AACtB;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9EsB,iBAgFad,OAAO,EAhFpB;AAAA,MAgFde,QAhFc,YAgFdA,QAhFc;AAAA,MAgFJC,YAhFI,YAgFJA,YAhFI;;AAiFtB,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAOC,CAAP;AAAA,WAAaC,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAAkBC,CAAlB,CAAb;AAAA,GAAjB;;AACA,MAAMG,OAAO,GAAG,SAAVA,OAAU,CAACC,MAAD,EAASJ,CAAT;AAAA,WAAeC,OAAO,CAACC,GAAR,CAAYE,MAAZ,EAAoBJ,CAApB,CAAf;AAAA,GAAhB;;AAEA,sBACI;AAAM,IAAA,QAAQ,EAAEH,YAAY,CAACC,QAAD,CAA5B;AAAA,4BACI,mCAAWF,QAAQ,CAAC,WAAD,CAAnB;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI,mCAAWA,QAAQ,CAAC,UAAD,CAAnB;AAAA;AAAA;AAAA;AAAA,aAFJ,eAGI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAOH,CA3FD;;GAAMD,W;UAgFiCd,O;;;KAhFjCc,W;AA6FN,eAAeA,WAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useForm, Controller } from 'react-hook-form';\nimport Select from 'react-select';\nimport Link from 'next/link';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { useRouter } from 'next/router';\nimport { signup } from '../actions/auth';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport {\n    getCompanyCategory,\n    getDocumentCategory,\n    getStates,\n    getDistricts,\n    getMunicipalities,\n} from '../actions/common';\n// const phoneRegExp =\n//     /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n\n// const schema = yup.object().shape({\n//     startup_name: yup.string().required('Startup Name is Required'),\n//     contact_number: yup\n//         .string()\n//         .matches(phoneRegExp, 'Phone number is not valid'),\n//     email: yup\n//         .string()\n//         .email('Must be Valid Email')\n//         .max(255)\n//         .required('Startup Email is Required'),\n//     pan_number: yup.number().positive().integer().required(),\n//     personal_name: yup.string().required(),\n//     personal_contact_number: yup\n//         .string()\n//         .matches(phoneRegExp, 'Phone number is not valid'),\n//     personal_email: yup\n//         .string()\n//         .email('Must be Valid Email')\n//         .max(255)\n//         .required('Personal Email is Required'),\n//     personal_address: yup.string().required(),\n//     pan_status: yup.string().required(),\n//     company_since: yup.date().required(),\n//     password: yup\n//         .string()\n//         .required()\n//         .min(8)\n//         .matches(\n//             /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\n//             'Must contain at least one uppercase letter, number and special character'\n//         ),\n//     password_confirmation: yup\n//         .string()\n//         .required()\n//         .oneOf([yup.ref('password')], 'Passwords must match'),\n// });\n\nconst JoinStartup = () => {\n    //     const [successMessage, setSuccessMessage] = useState('You are done!');\n    //     const [startDate, setStartDate] = useState(new Date());\n    //     const router = useRouter();\n\n    //     const [activeForm, setActiveForm] = useState(1);\n\n    //     const {\n    //         register,\n    //         setValue,\n    //         getValues,\n    //         control,\n    //         handleSubmit,\n    //         formState: { errors },\n    //     } = useForm({\n    //         resolver: yupResolver(schema),\n    //         mode: 'onBlur',\n    //     });\n\n    //     const handleNext = () => {\n    //         setActiveForm(2);\n    //     };\n    //     const [mystate, setMystate] = useState('');\n    //     const [mydistrict, setMydistrict] = useState('');\n    //     const dispatch = useDispatch();\n\n    //     const {\n    //         companyCategory,\n    //         documentCategory,\n    //         states,\n    //         districts,\n    //         municipalities,\n    //     } = useSelector((state) => state.common);\n\n    //     const { isLoading, message, signupsuccess } = useSelector(\n    //         (state) => state.auth\n    //     );\n\n    //     const categoryOptions = companyCategory?.map((d) => ({\n    //         value: d.id,\n    //         label: d.title,\n    //     }));\n    //     const documentOptions = documentCategory?.map((d) => ({\n    //         value: d.id,\n    //         label: d.title,\n    //     }));\n    //     const stateOptions = states?.map((d) => ({\n    //         value: d.id,\n    //         label: d.province_name,\n    //     }));\n    //     const districtOptions = districts\n    //         ?.filter((f) => f.state_id === mystate)\n    //         ?.map((d) => ({ value: d.id, label: d.district_name }));\n    //     const municipalityOptions = municipalities\n    //         ?.filter((f) => f.district_id === mydistrict)\n    //         ?.map((d) => ({ value: d.id, label: d.municipality_name }));\n\n    //     const handleOptionChange = (selectedOption) => {\n    //         let array = [];\n    //         selectedOption.map((item) => {\n    //             array.push(item.value);\n    //         });\n    //         setValue('document_category_id', array);\n    //     };\n\n    //     const onSubmit = (e) => {\n    //         console.log(e, 'i am submit e');\n    //         dispatch(signup(e));\n    //     };\n\n    //     useEffect(() => {\n    //         signupsuccess ? setActiveForm(4) : null;\n    //         message !== null ? setSuccessMessage(message) : null;\n    //         dispatch(getCompanyCategory());\n    //         dispatch(getDocumentCategory());\n    //         dispatch(getStates());\n    //         dispatch(getDistricts());\n    //         dispatch(getMunicipalities());\n    //     }, [dispatch, signupsuccess, message]);\n\n    const { register, handleSubmit } = useForm();\n    const onSubmit = (data, e) => console.log(data, e);\n    const onError = (errors, e) => console.log(errors, e);\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <input {...register('firstName')} />\n            <input {...register('lastName')} />\n            <button type='submit'>Submit</button>\n        </form>\n    );\n};\n\nexport default JoinStartup;\n\n//  {\n//   \"startup_name\": \"Techcare\",\n//   \"company_category_id\": \"1\",\n//   \"startupSubcategory\": \"1\",\n//   \"provience\": \"1\",\n//   \"district\": \"1\",\n//   \"municipality\": \"1\",\n//   \"location\": \"test\",\n//   \"contactNumber\": \"test\",\n//   \"startupEmail\": \"bhusalhari89@gmail.com\",\n//   \"terms\": \"1\",\n//   \"personFirstName\": \"Hari\",\n//   \"personLastName\": \"Bhusal\",\n//   \"personContact\": \"9847458523\",\n//   \"personEmail\": \"bhusalhari89@gmail.com\",\n//   \"personAddress\": \"shankhamul\",\n//   \"doc1\": \"\",\n//   \"doc2\": \"\",\n//   \"doc3\": \"\"\n// }\n"]},"metadata":{},"sourceType":"module"}