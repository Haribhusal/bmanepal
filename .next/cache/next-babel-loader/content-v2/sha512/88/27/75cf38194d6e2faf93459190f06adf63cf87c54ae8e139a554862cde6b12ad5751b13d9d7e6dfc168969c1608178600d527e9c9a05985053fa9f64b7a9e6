{"ast":null,"code":"import axios from 'axios';\nimport { CLEAR_MESSAGES, SIGN_UP, SIGN_UP_FAIL, SIGN_UP_SUCCESS, LOGIN, LOGIN_FAIL, LOGIN_SUCCESS, PROFILE, PROFILE_UPDATE, PROFILE_UPDATE_FAIL, PROFILE_UPDATE_SUCCESS, PASSWORD_UPDATE, PASSWORD_UPDATE_FAIL, PASSWORD_UPDATE_SUCCESS } from './types';\nimport { useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { responsiveFontSizes } from '@material-ui/core'; // SIGNUP USER\n\nexport var signup = function signup(data) {\n  return function (dispatch) {\n    dispatch({\n      type: SIGN_UP\n    });\n    data['files'] = [];\n    var form_data = new FormData();\n\n    for (var key in data) {\n      form_data.append(key, data[key]);\n    }\n\n    var config = {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    };\n    axios.post('/api/startup/signup/', form_data, config).then(function (res) {\n      dispatch({\n        type: SIGN_UP_SUCCESS,\n        payload: res.data\n      });\n    })[\"catch\"](function (err) {\n      dispatch({\n        type: SIGN_UP_FAIL,\n        payload: err.response.data\n      });\n    });\n  };\n}; // LOGIN USER\n\nexport var login = function login(data) {\n  return function (dispatch) {\n    dispatch({\n      type: LOGIN\n    });\n    var form_data = new FormData();\n\n    for (var key in data) {\n      form_data.append(key, data[key]);\n    }\n\n    axios.post('/api/startup/login', form_data).then(function (res) {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n    })[\"catch\"](function (err) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data\n      });\n    });\n  };\n}; // GET USER PROFILE\n\nexport var getProfile = function getProfile() {\n  return function (dispatch) {\n    var token = localStorage.getItem('token');\n    var config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: \"Brearer \".concat(token)\n      }\n    };\n\n    try {\n      axios.get('/api/startup/profile', config).then(function (res) {\n        dispatch({\n          type: PROFILE,\n          payload: res.data\n        });\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}; // Update Startup PROFILE\n\nexport var updateStartupProfile = function updateStartupProfile(data) {\n  return function (dispatch) {\n    dispatch({\n      type: PROFILE_UPDATE\n    });\n    var token = localStorage.getItem('token');\n    var config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: \"Brearer \".concat(token)\n      }\n    };\n    console.log(data, '============= data =================');\n    axios.post('/api/startup/update-profile', data, config).then(function (res) {\n      dispatch({\n        type: PROFILE_UPDATE_SUCCESS,\n        payload: res.data\n      });\n    })[\"catch\"](function (err) {\n      dispatch({\n        type: PROFILE_UPDATE_FAIL,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Update password\n\nexport var updatePassword = function updatePassword(data) {\n  var _s = $RefreshSig$();\n\n  return _s(function (dispatch) {\n    _s();\n\n    var _useSelector = useSelector(function (state) {\n      return state.auth;\n    }),\n        user = _useSelector.user;\n\n    console.log(user, 'user'); // dispatch({ type: PASSWORD_UPDATE });\n    // const token = localStorage.getItem('token');\n    // const config = {\n    //     headers: {\n    //         'Content-Type': 'application/json',\n    //         Authorization: `Brearer ${token}`,\n    //     },\n    // };\n    // axios\n    //     .post('/api/startup/update-profile', data, config)\n    //     .then((res) => {\n    //         dispatch({\n    //             type: PASSWORD_UPDATE_SUCCESS,\n    //             payload: res.data,\n    //         });\n    //     })\n    //     .catch((err) => {\n    //         dispatch({\n    //             type: PASSWORD_UPDATE_FAIL,\n    //             payload: err.response.data,\n    //         });\n    //     });\n  }, \"HA6wZhGeXNR9tzJ3aDGGsGCdOyI=\", false, function () {\n    return [useSelector];\n  });\n}; // Clear message on page load\n\nexport var clearMessages = function clearMessages() {\n  return function (dispatch) {\n    dispatch({\n      type: CLEAR_MESSAGES\n    });\n  };\n};","map":{"version":3,"sources":["/home/whiteshadow/projects/benchmark-advisors/actions/auth.js"],"names":["axios","CLEAR_MESSAGES","SIGN_UP","SIGN_UP_FAIL","SIGN_UP_SUCCESS","LOGIN","LOGIN_FAIL","LOGIN_SUCCESS","PROFILE","PROFILE_UPDATE","PROFILE_UPDATE_FAIL","PROFILE_UPDATE_SUCCESS","PASSWORD_UPDATE","PASSWORD_UPDATE_FAIL","PASSWORD_UPDATE_SUCCESS","useSelector","useRouter","responsiveFontSizes","signup","data","dispatch","type","form_data","FormData","key","append","config","headers","post","then","res","payload","err","response","login","getProfile","token","localStorage","getItem","Authorization","get","error","console","log","updateStartupProfile","updatePassword","state","auth","user","clearMessages"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {\n    CLEAR_MESSAGES,\n    SIGN_UP,\n    SIGN_UP_FAIL,\n    SIGN_UP_SUCCESS,\n    LOGIN,\n    LOGIN_FAIL,\n    LOGIN_SUCCESS,\n    PROFILE,\n    PROFILE_UPDATE,\n    PROFILE_UPDATE_FAIL,\n    PROFILE_UPDATE_SUCCESS,\n    PASSWORD_UPDATE,\n    PASSWORD_UPDATE_FAIL,\n    PASSWORD_UPDATE_SUCCESS,\n} from './types';\nimport { useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { responsiveFontSizes } from '@material-ui/core';\n\n// SIGNUP USER\nexport const signup = (data) => (dispatch) => {\n    dispatch({ type: SIGN_UP });\n    data['files'] = [];\n    var form_data = new FormData();\n    for (var key in data) {\n        form_data.append(key, data[key]);\n    }\n    const config = {\n        headers: {\n            'content-type': 'multipart/form-data',\n        },\n    };\n    axios\n        .post('/api/startup/signup/', form_data, config)\n        .then((res) => {\n            dispatch({\n                type: SIGN_UP_SUCCESS,\n                payload: res.data,\n            });\n        })\n        .catch((err) => {\n            dispatch({\n                type: SIGN_UP_FAIL,\n                payload: err.response.data,\n            });\n        });\n};\n\n// LOGIN USER\nexport const login = (data) => (dispatch) => {\n    dispatch({ type: LOGIN });\n    var form_data = new FormData();\n    for (var key in data) {\n        form_data.append(key, data[key]);\n    }\n    axios\n        .post('/api/startup/login', form_data)\n        .then((res) => {\n            dispatch({\n                type: LOGIN_SUCCESS,\n                payload: res.data,\n            });\n        })\n        .catch((err) => {\n            dispatch({\n                type: LOGIN_FAIL,\n                payload: err.response.data,\n            });\n        });\n};\n\n// GET USER PROFILE\nexport const getProfile = () => (dispatch) => {\n    const token = localStorage.getItem('token');\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Brearer ${token}`,\n        },\n    };\n    try {\n        axios.get('/api/startup/profile', config).then((res) => {\n            dispatch({\n                type: PROFILE,\n                payload: res.data,\n            });\n        });\n    } catch (error) {\n        console.log(error);\n    }\n};\n\n// Update Startup PROFILE\nexport const updateStartupProfile = (data) => (dispatch) => {\n    dispatch({ type: PROFILE_UPDATE });\n    const token = localStorage.getItem('token');\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Brearer ${token}`,\n        },\n    };\n\n    console.log(data, '============= data =================');\n\n    axios\n        .post('/api/startup/update-profile', data, config)\n        .then((res) => {\n            dispatch({\n                type: PROFILE_UPDATE_SUCCESS,\n                payload: res.data,\n            });\n        })\n        .catch((err) => {\n            dispatch({\n                type: PROFILE_UPDATE_FAIL,\n                payload: err.response.data,\n            });\n        });\n};\n\n// Update password\nexport const updatePassword = (data) => (dispatch) => {\n    const { user } = useSelector((state) => state.auth);\n\n    console.log(user, 'user');\n\n    // dispatch({ type: PASSWORD_UPDATE });\n    // const token = localStorage.getItem('token');\n    // const config = {\n    //     headers: {\n    //         'Content-Type': 'application/json',\n    //         Authorization: `Brearer ${token}`,\n    //     },\n    // };\n\n    // axios\n    //     .post('/api/startup/update-profile', data, config)\n    //     .then((res) => {\n    //         dispatch({\n    //             type: PASSWORD_UPDATE_SUCCESS,\n    //             payload: res.data,\n    //         });\n    //     })\n    //     .catch((err) => {\n    //         dispatch({\n    //             type: PASSWORD_UPDATE_FAIL,\n    //             payload: err.response.data,\n    //         });\n    //     });\n};\n\n// Clear message on page load\nexport const clearMessages = () => (dispatch) => {\n    dispatch({ type: CLEAR_MESSAGES });\n};\n"]},"metadata":{},"sourceType":"module"}