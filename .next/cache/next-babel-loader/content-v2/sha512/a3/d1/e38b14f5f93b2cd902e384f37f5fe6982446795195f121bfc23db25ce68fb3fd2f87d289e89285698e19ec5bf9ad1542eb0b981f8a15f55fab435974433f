{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/whiteshadow/projects/benchmark-advisors/components/startup/UpdatePasswordForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport * as yup from 'yup';\nimport { useRouter } from 'next/router';\nimport { useDispatch } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { updatePassword } from '../../actions/auth';\n\nconst UpdatePasswordForm = () => {\n  var _errors$password, _errors$password_conf;\n\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    0: isRevealPwd,\n    1: setIsRevealPwd\n  } = useState(false);\n  const schema = yup.object().shape({\n    // old_password: yup.string().required(),\n    password: yup.string().required().min(8).matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/, 'Must contain at least one uppercase letter, number and special character'),\n    password_confirmation: yup.string().required().oneOf([yup.ref('password')], 'Passwords must match')\n  });\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n\n  const onSubmit = data => {\n    dispatch(updatePassword(data, router.pathname === '/startup/edit-profile' ? 'startup' : 'investor'));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-sm-6 d-flex align-items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        className: \"w-100\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formwrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-12\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group passwordWrapper\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"\",\n                  className: \"small text-muted\",\n                  children: \"Current Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({}, register('old_password')), {}, {\n                  name: \"current_password\",\n                  type: isRevealPwd ? 'text' : 'password',\n                  className: \"form-control\",\n                  placeholder: \"Current Password\"\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: isRevealPwd ? 'las la-eye-slash toggleEye' : 'las la-eye toggleEye',\n                  onClick: () => setIsRevealPwd(prevState => !prevState)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-12\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"\",\n                  className: \"small text-muted\",\n                  children: \"New Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({}, register('password')), {}, {\n                  name: \"password\",\n                  type: \"password\",\n                  className: \"form-control\",\n                  placeholder: \"New Password\"\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-danger\",\n                  children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-12\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"\",\n                  className: \"small text-muted\",\n                  children: \"Confirm Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({}, register('password_confirmation')), {}, {\n                  name: \"password_confirmation\",\n                  type: \"password\",\n                  className: \"form-control\",\n                  placeholder: \"Confirm Password\"\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-danger\",\n                  children: (_errors$password_conf = errors.password_confirmation) === null || _errors$password_conf === void 0 ? void 0 : _errors$password_conf.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-12 d-flex justify-content-between\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"Submit\",\n                defaultValue: \"Submit\",\n                className: \"btn btn_p\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rightbarContent\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"imagewrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"images/joinbenchmark.png\",\n          className: \"img-fluid\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\nexport default UpdatePasswordForm;","map":{"version":3,"sources":["/home/whiteshadow/projects/benchmark-advisors/components/startup/UpdatePasswordForm.js"],"names":["React","useState","yup","useRouter","useDispatch","useForm","yupResolver","updatePassword","UpdatePasswordForm","dispatch","router","isRevealPwd","setIsRevealPwd","schema","object","shape","password","string","required","min","matches","password_confirmation","oneOf","ref","register","handleSubmit","formState","errors","resolver","onSubmit","data","pathname","prevState","message"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,cAAT,QAA+B,oBAA/B;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;AAAA;;AAC7B,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,MAAM,GAAGP,SAAS,EAAxB;AAEA,QAAM;AAAA,OAACQ,WAAD;AAAA,OAAcC;AAAd,MAAgCX,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAMY,MAAM,GAAGX,GAAG,CAACY,MAAJ,GAAaC,KAAb,CAAmB;AAC9B;AACAC,IAAAA,QAAQ,EAAEd,GAAG,CACRe,MADK,GAELC,QAFK,GAGLC,GAHK,CAGD,CAHC,EAILC,OAJK,CAKF,sEALE,EAMF,0EANE,CAFoB;AAU9BC,IAAAA,qBAAqB,EAAEnB,GAAG,CACrBe,MADkB,GAElBC,QAFkB,GAGlBI,KAHkB,CAGZ,CAACpB,GAAG,CAACqB,GAAJ,CAAQ,UAAR,CAAD,CAHY,EAGW,sBAHX;AAVO,GAAnB,CAAf;AAgBA,QAAM;AACFC,IAAAA,QADE;AAEFC,IAAAA,YAFE;AAGFC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAHT,MAIFtB,OAAO,CAAC;AACRuB,IAAAA,QAAQ,EAAEtB,WAAW,CAACO,MAAD;AADb,GAAD,CAJX;;AAQA,QAAMgB,QAAQ,GAAIC,IAAD,IAAU;AACvBrB,IAAAA,QAAQ,CACJF,cAAc,CACVuB,IADU,EAEVpB,MAAM,CAACqB,QAAP,KAAoB,uBAApB,GACM,SADN,GAEM,UAJI,CADV,CAAR;AAQH,GATD;;AAWA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,oCAAf;AAAA,6BACI;AAAM,QAAA,QAAQ,EAAEN,YAAY,CAACI,QAAD,CAA5B;AAAwC,QAAA,SAAS,EAAC,OAAlD;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,qCACI;AAAK,gBAAA,SAAS,EAAC,4BAAf;AAAA,wCACI;AACI,kBAAA,OAAO,EAAC,EADZ;AAEI,kBAAA,SAAS,EAAC,kBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAOI,iDACQL,QAAQ,CAAC,cAAD,CADhB;AAEI,kBAAA,IAAI,EAAC,kBAFT;AAGI,kBAAA,IAAI,EAAEb,WAAW,GAAG,MAAH,GAAY,UAHjC;AAII,kBAAA,SAAS,EAAC,cAJd;AAKI,kBAAA,WAAW,EAAC;AALhB;AAAA;AAAA;AAAA;AAAA,wBAPJ,eAcI;AACI,kBAAA,KAAK,EACDA,WAAW,GACL,4BADK,GAEL,sBAJd;AAMI,kBAAA,OAAO,EAAE,MACLC,cAAc,CACToB,SAAD,IAAe,CAACA,SADN;AAPtB;AAAA;AAAA;AAAA;AAAA,wBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAgCI;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,qCACI;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,wCACI;AACI,kBAAA,OAAO,EAAC,EADZ;AAEI,kBAAA,SAAS,EAAC,kBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAOI,iDACQR,QAAQ,CAAC,UAAD,CADhB;AAEI,kBAAA,IAAI,EAAC,UAFT;AAGI,kBAAA,IAAI,EAAC,UAHT;AAII,kBAAA,SAAS,EAAC,cAJd;AAKI,kBAAA,WAAW,EAAC;AALhB;AAAA;AAAA;AAAA;AAAA,wBAPJ,eAeQ;AAAM,kBAAA,SAAS,EAAC,aAAhB;AAAA,gDACKG,MAAM,CAACX,QADZ,qDACK,iBAAiBiB;AADtB;AAAA;AAAA;AAAA;AAAA,wBAfR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAhCJ,eAwDI;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,qCACI;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,wCACI;AACI,kBAAA,OAAO,EAAC,EADZ;AAEI,kBAAA,SAAS,EAAC,kBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAOI,iDACQT,QAAQ,CAAC,uBAAD,CADhB;AAEI,kBAAA,IAAI,EAAC,uBAFT;AAGI,kBAAA,IAAI,EAAC,UAHT;AAII,kBAAA,SAAS,EAAC,cAJd;AAKI,kBAAA,WAAW,EAAC;AALhB;AAAA;AAAA;AAAA;AAAA,wBAPJ,eAeQ;AAAM,kBAAA,SAAS,EAAC,aAAhB;AAAA,qDAEQG,MAAM,CAACN,qBAFf,0DAEQ,sBACMY;AAHd;AAAA;AAAA;AAAA;AAAA,wBAfR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAxDJ,eAoFI;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC,0CAAf;AAAA,qCACI;AACI,gBAAA,IAAI,EAAC,QADT;AAEI,gBAAA,YAAY,EAAC,QAFjB;AAGI,gBAAA,SAAS,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBApFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAmGI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACI;AACI,UAAA,GAAG,EAAC,0BADR;AAEI,UAAA,SAAS,EAAC,WAFd;AAGI,UAAA,GAAG,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAnGJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+GH,CAxJD;;AA0JA,eAAezB,kBAAf","sourcesContent":["import React, { useState } from 'react';\nimport * as yup from 'yup';\nimport { useRouter } from 'next/router';\nimport { useDispatch } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { updatePassword } from '../../actions/auth';\n\nconst UpdatePasswordForm = () => {\n    const dispatch = useDispatch();\n    const router = useRouter();\n\n    const [isRevealPwd, setIsRevealPwd] = useState(false);\n\n    const schema = yup.object().shape({\n        // old_password: yup.string().required(),\n        password: yup\n            .string()\n            .required()\n            .min(8)\n            .matches(\n                /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\n                'Must contain at least one uppercase letter, number and special character'\n            ),\n        password_confirmation: yup\n            .string()\n            .required()\n            .oneOf([yup.ref('password')], 'Passwords must match'),\n    });\n\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm({\n        resolver: yupResolver(schema),\n    });\n\n    const onSubmit = (data) => {\n        dispatch(\n            updatePassword(\n                data,\n                router.pathname === '/startup/edit-profile'\n                    ? 'startup'\n                    : 'investor'\n            )\n        );\n    };\n\n    return (\n        <div className='row'>\n            <div className='col-sm-6 d-flex align-items-center'>\n                <form onSubmit={handleSubmit(onSubmit)} className='w-100'>\n                    <div className='formwrapper'>\n                        <div className='row'>\n                            <div className='col-sm-12'>\n                                <div className='form-group passwordWrapper'>\n                                    <label\n                                        htmlFor=''\n                                        className='small text-muted'\n                                    >\n                                        Current Password\n                                    </label>\n                                    <input\n                                        {...register('old_password')}\n                                        name='current_password'\n                                        type={isRevealPwd ? 'text' : 'password'}\n                                        className='form-control'\n                                        placeholder='Current Password'\n                                    />\n                                    <i\n                                        class={\n                                            isRevealPwd\n                                                ? 'las la-eye-slash toggleEye'\n                                                : 'las la-eye toggleEye'\n                                        }\n                                        onClick={() =>\n                                            setIsRevealPwd(\n                                                (prevState) => !prevState\n                                            )\n                                        }\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='row'>\n                            <div className='col-sm-12'>\n                                <div className='form-group'>\n                                    <label\n                                        htmlFor=''\n                                        className='small text-muted'\n                                    >\n                                        New Password\n                                    </label>\n                                    <input\n                                        {...register('password')}\n                                        name='password'\n                                        type='password'\n                                        className='form-control'\n                                        placeholder='New Password'\n                                    />\n                                    {\n                                        <span className='text-danger'>\n                                            {errors.password?.message}\n                                        </span>\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                        <div className='row'>\n                            <div className='col-sm-12'>\n                                <div className='form-group'>\n                                    <label\n                                        htmlFor=''\n                                        className='small text-muted'\n                                    >\n                                        Confirm Password\n                                    </label>\n                                    <input\n                                        {...register('password_confirmation')}\n                                        name='password_confirmation'\n                                        type='password'\n                                        className='form-control'\n                                        placeholder='Confirm Password'\n                                    />\n                                    {\n                                        <span className='text-danger'>\n                                            {\n                                                errors.password_confirmation\n                                                    ?.message\n                                            }\n                                        </span>\n                                    }\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className='row'>\n                            <div className='col-sm-12 d-flex justify-content-between'>\n                                <input\n                                    type='Submit'\n                                    defaultValue='Submit'\n                                    className='btn btn_p'\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <div className='rightbarContent'>\n                <div className='imagewrapper'>\n                    <img\n                        src='images/joinbenchmark.png'\n                        className='img-fluid'\n                        alt=''\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default UpdatePasswordForm;\n"]},"metadata":{},"sourceType":"module"}