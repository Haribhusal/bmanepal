{"ast":null,"code":"import axios from 'axios';\nimport { SIGN_UP, SIGN_UP_FAIL, SIGN_UP_SUCCESS, LOGIN, LOGIN_FAIL, LOGIN_SUCCESS, PROFILE, PROFILE_UPDATE, PROFILE_UPDATE_FAIL, PROFILE_UPDATE_SUCCESS } from './types';\nimport { useRouter } from 'next/router';\nimport { responsiveFontSizes } from '@material-ui/core'; // SIGNUP USER\n\nexport const signup = data => dispatch => {\n  dispatch({\n    type: SIGN_UP\n  });\n  data['files'] = [];\n  var form_data = new FormData();\n\n  for (var key in data) {\n    form_data.append(key, data[key]);\n  }\n\n  const config = {\n    headers: {\n      'content-type': 'multipart/form-data'\n    }\n  };\n  axios.post('/api/startup/signup/', form_data, config).then(res => {\n    dispatch({\n      type: SIGN_UP_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: SIGN_UP_FAIL,\n      payload: err.response.data\n    });\n  });\n}; // LOGIN USER\n\nexport const login = data => dispatch => {\n  dispatch({\n    type: LOGIN\n  });\n  var form_data = new FormData();\n\n  for (var key in data) {\n    form_data.append(key, data[key]);\n  }\n\n  axios.post('/api/startup/login', form_data).then(res => {\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: err.response.data\n    });\n  });\n}; // GET USER PROFILE\n\nexport const getProfile = () => dispatch => {\n  const token = localStorage.getItem('token');\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Brearer ${token}`\n    }\n  };\n\n  try {\n    axios.get('/api/startup/profile', config).then(res => {\n      dispatch({\n        type: PROFILE,\n        payload: res.data\n      });\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}; // Update Startup PROFILE\n\nexport const updateStartupProfile = () => dispatch => {\n  dispatch({\n    type: PROFILE_UPDATE\n  });\n  const token = localStorage.getItem('token');\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Brearer ${token}`\n    }\n  };\n\n  try {\n    axios.post('/api/startup/update-profile', config).then(res => {\n      dispatch({\n        type: PROFILE_UPDATE_SUCCESS,\n        payload: res.data\n      });\n    });\n  } catch (error) {\n    dispatch({\n      type: PROFILE_UPDATE_FAIL,\n      payload: err.response.data\n    });\n  }\n};","map":{"version":3,"sources":["/home/whiteshadow/projects/benchmark-advisors/actions/auth.js"],"names":["axios","SIGN_UP","SIGN_UP_FAIL","SIGN_UP_SUCCESS","LOGIN","LOGIN_FAIL","LOGIN_SUCCESS","PROFILE","PROFILE_UPDATE","PROFILE_UPDATE_FAIL","PROFILE_UPDATE_SUCCESS","useRouter","responsiveFontSizes","signup","data","dispatch","type","form_data","FormData","key","append","config","headers","post","then","res","payload","catch","err","response","login","getProfile","token","localStorage","getItem","Authorization","get","error","console","log","updateStartupProfile"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {\n    SIGN_UP,\n    SIGN_UP_FAIL,\n    SIGN_UP_SUCCESS,\n    LOGIN,\n    LOGIN_FAIL,\n    LOGIN_SUCCESS,\n    PROFILE,\n    PROFILE_UPDATE,\n    PROFILE_UPDATE_FAIL,\n    PROFILE_UPDATE_SUCCESS,\n} from './types';\nimport { useRouter } from 'next/router';\nimport { responsiveFontSizes } from '@material-ui/core';\n\n// SIGNUP USER\nexport const signup = (data) => (dispatch) => {\n    dispatch({ type: SIGN_UP });\n    data['files'] = [];\n    var form_data = new FormData();\n    for (var key in data) {\n        form_data.append(key, data[key]);\n    }\n    const config = {\n        headers: {\n            'content-type': 'multipart/form-data',\n        },\n    };\n    axios\n        .post('/api/startup/signup/', form_data, config)\n        .then((res) => {\n            dispatch({\n                type: SIGN_UP_SUCCESS,\n                payload: res.data,\n            });\n        })\n        .catch((err) => {\n            dispatch({\n                type: SIGN_UP_FAIL,\n                payload: err.response.data,\n            });\n        });\n};\n\n// LOGIN USER\nexport const login = (data) => (dispatch) => {\n    dispatch({ type: LOGIN });\n    var form_data = new FormData();\n    for (var key in data) {\n        form_data.append(key, data[key]);\n    }\n    axios\n        .post('/api/startup/login', form_data)\n        .then((res) => {\n            dispatch({\n                type: LOGIN_SUCCESS,\n                payload: res.data,\n            });\n        })\n        .catch((err) => {\n            dispatch({\n                type: LOGIN_FAIL,\n                payload: err.response.data,\n            });\n        });\n};\n\n// GET USER PROFILE\nexport const getProfile = () => (dispatch) => {\n    const token = localStorage.getItem('token');\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Brearer ${token}`,\n        },\n    };\n    try {\n        axios.get('/api/startup/profile', config).then((res) => {\n            dispatch({\n                type: PROFILE,\n                payload: res.data,\n            });\n        });\n    } catch (error) {\n        console.log(error);\n    }\n};\n\n// Update Startup PROFILE\nexport const updateStartupProfile = () => (dispatch) => {\n    dispatch({ type: PROFILE_UPDATE });\n    const token = localStorage.getItem('token');\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Brearer ${token}`,\n        },\n    };\n    try {\n        axios.post('/api/startup/update-profile', config).then((res) => {\n            dispatch({\n                type: PROFILE_UPDATE_SUCCESS,\n                payload: res.data,\n            });\n        });\n    } catch (error) {\n        dispatch({\n            type: PROFILE_UPDATE_FAIL,\n            payload: err.response.data,\n        });\n    }\n};\n"]},"metadata":{},"sourceType":"module"}