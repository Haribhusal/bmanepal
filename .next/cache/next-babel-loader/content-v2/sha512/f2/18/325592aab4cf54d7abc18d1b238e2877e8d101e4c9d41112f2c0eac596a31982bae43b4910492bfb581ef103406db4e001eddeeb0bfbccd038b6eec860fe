{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { INVESTOR_SIGNUP, INVESTOR_SIGNUP_FAIL, INVESTOR_SIGNUP_SUCCESS } from '../actions/types';\nconst initialState = {\n  investor: null,\n  signupsuccess: null,\n  successMessage: null,\n  errorMessage: null\n};\nexport default function investorSignup(state = initialState, action) {\n  var _action$payload, _action$payload2, _action$payload3, _action$payload3$data, _action$payload3$data2;\n\n  switch (action.type) {\n    case INVESTOR_SIGNUP:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signupsuccess: null,\n        errorMessage: null\n      });\n\n    case INVESTOR_SIGNUP_SUCCESS:\n      return _objectSpread(_objectSpread(_objectSpread({}, state), action.payload), {}, {\n        investor: (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.data,\n        signupsuccess: true,\n        successMessage: (_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.message,\n        errorMessage: null\n      });\n\n    case INVESTOR_SIGNUP_FAIL:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        errorMessage: ((_action$payload3 = action.payload) === null || _action$payload3 === void 0 ? void 0 : (_action$payload3$data = _action$payload3.data) === null || _action$payload3$data === void 0 ? void 0 : (_action$payload3$data2 = _action$payload3$data.email) === null || _action$payload3$data2 === void 0 ? void 0 : _action$payload3$data2[0]) || 'Something went wrong'\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/harry/Desktop/bm/benchmark-advisors/benchmark-advisors (copy)/reducers/investor.js"],"names":["INVESTOR_SIGNUP","INVESTOR_SIGNUP_FAIL","INVESTOR_SIGNUP_SUCCESS","initialState","investor","signupsuccess","successMessage","errorMessage","investorSignup","state","action","type","payload","data","message","email"],"mappings":";;;;;;AAAA,SACIA,eADJ,EAEIC,oBAFJ,EAGIC,uBAHJ,QAIO,kBAJP;AAMA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,IADO;AAEjBC,EAAAA,aAAa,EAAE,IAFE;AAGjBC,EAAAA,cAAc,EAAE,IAHC;AAIjBC,EAAAA,YAAY,EAAE;AAJG,CAArB;AAOA,eAAe,SAASC,cAAT,CAAwBC,KAAK,GAAGN,YAAhC,EAA8CO,MAA9C,EAAsD;AAAA;;AACjE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,eAAL;AACI,6CACOS,KADP;AAEIJ,QAAAA,aAAa,EAAE,IAFnB;AAGIE,QAAAA,YAAY,EAAE;AAHlB;;AAKJ,SAAKL,uBAAL;AACI,2DACOO,KADP,GAEOC,MAAM,CAACE,OAFd;AAGIR,QAAAA,QAAQ,qBAAEM,MAAM,CAACE,OAAT,oDAAE,gBAAgBC,IAH9B;AAIIR,QAAAA,aAAa,EAAE,IAJnB;AAKIC,QAAAA,cAAc,sBAAEI,MAAM,CAACE,OAAT,qDAAE,iBAAgBE,OALpC;AAMIP,QAAAA,YAAY,EAAE;AANlB;;AAQJ,SAAKN,oBAAL;AACI,6CACOQ,KADP;AAEIF,QAAAA,YAAY,EACR,qBAAAG,MAAM,CAACE,OAAP,+FAAgBC,IAAhB,0GAAsBE,KAAtB,kFAA8B,CAA9B,MAAoC;AAH5C;;AAKJ;AACI,aAAON,KAAP;AAvBR;AAyBH","sourcesContent":["import {\n    INVESTOR_SIGNUP,\n    INVESTOR_SIGNUP_FAIL,\n    INVESTOR_SIGNUP_SUCCESS,\n} from '../actions/types';\n\nconst initialState = {\n    investor: null,\n    signupsuccess: null,\n    successMessage: null,\n    errorMessage: null,\n};\n\nexport default function investorSignup(state = initialState, action) {\n    switch (action.type) {\n        case INVESTOR_SIGNUP:\n            return {\n                ...state,\n                signupsuccess: null,\n                errorMessage: null,\n            };\n        case INVESTOR_SIGNUP_SUCCESS:\n            return {\n                ...state,\n                ...action.payload,\n                investor: action.payload?.data,\n                signupsuccess: true,\n                successMessage: action.payload?.message,\n                errorMessage: null,\n            };\n        case INVESTOR_SIGNUP_FAIL:\n            return {\n                ...state,\n                errorMessage:\n                    action.payload?.data?.email?.[0] || 'Something went wrong',\n            };\n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}