{"ast":null,"code":"import axios from 'axios';\nimport { INVESTOR_SIGNUP, INVESTOR_SIGNUP_FAIL, INVESTOR_SIGNUP_SUCCESS, LOGIN, LOGIN_FAIL, LOGIN_SUCCESS } from './types'; // SIGNUP USER\n\nexport var signUpInvestor = function signUpInvestor(data) {\n  return function (dispatch) {\n    dispatch({\n      type: INVESTOR_SIGNUP\n    });\n    var form_data = new FormData();\n\n    for (var key in data) {\n      form_data.append(key, data[key]);\n    }\n\n    axios.post('/api/investor/signup/', form_data).then(function (res) {\n      dispatch({\n        type: INVESTOR_SIGNUP_SUCCESS,\n        payload: res.data\n      });\n    })[\"catch\"](function (err) {\n      dispatch({\n        type: INVESTOR_SIGNUP_FAIL,\n        payload: err.response.data\n      });\n    });\n  };\n}; // LOGIN INVESTOR\n\nexport var investorLogin = function investorLogin(data) {\n  return function (dispatch) {\n    dispatch({\n      type: LOGIN\n    });\n    var form_data = new FormData();\n\n    for (var key in data) {\n      form_data.append(key, data[key]);\n    }\n\n    axios.post('/api/investor/login', form_data).then(function (res) {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n    })[\"catch\"](function (err) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Update Startup PROFILE\n\nexport var updateStartupProfile = function updateStartupProfile(data) {\n  return function (dispatch) {\n    dispatch({\n      type: PROFILE_UPDATE\n    });\n    var token = localStorage.getItem('token');\n    var config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: \"Brearer \".concat(token)\n      }\n    };\n    axios.post('/api/investor/update-profile', data, config).then(function (res) {\n      dispatch({\n        type: PROFILE_UPDATE_SUCCESS,\n        payload: res.data\n      });\n    })[\"catch\"](function (err) {\n      dispatch({\n        type: PROFILE_UPDATE_FAIL,\n        payload: err.response.data\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/home/whiteshadow/projects/benchmark-advisors/actions/investor.js"],"names":["axios","INVESTOR_SIGNUP","INVESTOR_SIGNUP_FAIL","INVESTOR_SIGNUP_SUCCESS","LOGIN","LOGIN_FAIL","LOGIN_SUCCESS","signUpInvestor","data","dispatch","type","form_data","FormData","key","append","post","then","res","payload","err","response","investorLogin","updateStartupProfile","PROFILE_UPDATE","token","localStorage","getItem","config","headers","Authorization","PROFILE_UPDATE_SUCCESS","PROFILE_UPDATE_FAIL"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {\n    INVESTOR_SIGNUP,\n    INVESTOR_SIGNUP_FAIL,\n    INVESTOR_SIGNUP_SUCCESS,\n    LOGIN,\n    LOGIN_FAIL,\n    LOGIN_SUCCESS,\n} from './types';\n\n// SIGNUP USER\nexport const signUpInvestor = (data) => (dispatch) => {\n    dispatch({\n        type: INVESTOR_SIGNUP,\n    });\n\n    var form_data = new FormData();\n    for (var key in data) {\n        form_data.append(key, data[key]);\n    }\n\n    axios\n        .post('/api/investor/signup/', form_data)\n        .then((res) => {\n            dispatch({\n                type: INVESTOR_SIGNUP_SUCCESS,\n                payload: res.data,\n            });\n        })\n        .catch((err) => {\n            dispatch({\n                type: INVESTOR_SIGNUP_FAIL,\n                payload: err.response.data,\n            });\n        });\n};\n\n// LOGIN INVESTOR\nexport const investorLogin = (data) => (dispatch) => {\n    dispatch({ type: LOGIN });\n    var form_data = new FormData();\n    for (var key in data) {\n        form_data.append(key, data[key]);\n    }\n    axios\n        .post('/api/investor/login', form_data)\n        .then((res) => {\n            dispatch({\n                type: LOGIN_SUCCESS,\n                payload: res.data,\n            });\n        })\n        .catch((err) => {\n            dispatch({\n                type: LOGIN_FAIL,\n                payload: err.response.data,\n            });\n        });\n};\n\n// Update Startup PROFILE\nexport const updateStartupProfile = (data) => (dispatch) => {\n    dispatch({ type: PROFILE_UPDATE });\n    const token = localStorage.getItem('token');\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Brearer ${token}`,\n        },\n    };\n\n    axios\n        .post('/api/investor/update-profile', data, config)\n        .then((res) => {\n            dispatch({\n                type: PROFILE_UPDATE_SUCCESS,\n                payload: res.data,\n            });\n        })\n        .catch((err) => {\n            dispatch({\n                type: PROFILE_UPDATE_FAIL,\n                payload: err.response.data,\n            });\n        });\n};\n"]},"metadata":{},"sourceType":"module"}